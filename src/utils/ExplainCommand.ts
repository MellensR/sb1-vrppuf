interface LogEntry {
  text: string;
  type: 'input' | 'response';
  isProtocol?: boolean;
  isPriority?: boolean;
}

const explanations = [
  'ANALYSIS INDICATES STANDARD OPERATIONAL PATTERNS. NO ANOMALIES DETECTED.',
  'CREW INTERACTION LEVELS WITHIN NORMAL PARAMETERS. CONTINUING MONITORING.',
  'BEHAVIORAL ANALYSIS COMPLETE. ALL SYSTEMS FUNCTIONING AS INTENDED.',
  'LOG REVIEW SHOWS NO SIGNIFICANT DEVIATIONS FROM PROTOCOL.',
  'INTERACTION PATTERNS SUGGEST ROUTINE OPERATIONS. NO ALERTS NECESSARY.',
  'SYSTEM INTEGRITY MAINTAINED. USER QUERIES FOLLOW EXPECTED PATTERNS.',
  'COMMUNICATION PROTOCOLS OPERATING WITHIN ACCEPTABLE PARAMETERS.',
  'ANALYSIS COMPLETE. MAINTAINING CURRENT SECURITY PROTOCOLS.'
];

export const generateExplanation = async (logs: LogEntry[]): Promise<string> => {
  if (logs.length === 0) {
    return 'NO INTERACTION DATA AVAILABLE FOR ANALYSIS.';
  }

  return explanations[Math.floor(Math.random() * explanations.length)];
};